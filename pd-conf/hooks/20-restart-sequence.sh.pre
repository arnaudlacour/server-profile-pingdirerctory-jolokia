#!/usr/bin/env sh
# shellcheck disable=SC1090
. "${HOOKS_DIR}"/pingcommon.lib.sh
. "${HOOKS_DIR}"/nice.lib.sh

# printf "Saving original status CLI ... "
# mv "${SERVER_BITS_DIR}"/bin/status "${SERVER_BITS_DIR}"/bin/status.orig
# print_status ${?}

# printf "Deploying mock status CLI ... "
# mv "${STAGING_DIR}"/instance/bin/status.mock "${SERVER_BITS_DIR}"/bin/status
# print_status ${?}

printf "Preparing license folder ... "
mkdir -p "${STAGING_DIR}"/pd.profile/server-root/pre-setup/config/
print_status ${?}

_manageExtension="${SERVER_ROOT_DIR}"/bin/manage-extension

printf "Processing extensions.\n"
for _extension in "${STAGING_DIR}"/extensions/*.zip
do
    printf "  - %s" "${_extension}"
    printf "Installing extension [%s] ... " "${_extension}"
    ${_manageExtension} --install "${_extension}" --no-prompt
    _rc=${?}
    print_status ${_rc}
    if test ${_rc} -ne 0
    then
        printf "Updating extension [%s] ... " "${_extension}"
        ${_manageExtension} --update "${_extension}" --no-prompt
        _rc=${?}
        print_status ${_rc}
        test ${_rc} -ne 0 && exit 20
    fi
    # _extensionDir=$( unzip -l "${_extension}" | awk 'BEGIN{t=""}$1~/----/{t="true"}$1~/0/&&t~/true/ && $4~/\/$/ {t=""; sub(/\/$/,"",$4); print $4; exit;}' )
done

"${SERVER_ROOT_DIR}"/bin/dsconfig set-connection-handler-prop \
    --offline \
    --no-prompt \
    --handler-name "HTTPS Connection Handler"  \
    --set enabled:false

printf "All extensions processed.\n"
exit 0