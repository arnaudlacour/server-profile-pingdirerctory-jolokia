#!/usr/bin/env sh
# shellcheck disable=SC1090
. "${HOOKS_DIR}"/pingcommon.lib.sh
. "${HOOKS_DIR}"/nice.lib.sh

printf "Saving original status CLI ... "
mv "${SERVER_BITS_DIR}"/bin/status "${SERVER_BITS_DIR}"/bin/status.orig
_rc=${?}
print_status ${_rc}

printf "Deploying mock status CLI ... "
mv "${STAGING_DIR}"/instance/bin/status.mock "${SERVER_BITS_DIR}"/bin/status
_rc=${?}
print_status ${_rc}

printf "Preparing license folder ... "
mkdir -p "${STAGING_DIR}"/pd.profile/server-root/pre-setup/config/
_rc=${?}
print_status ${_rc}

_manageExtension="${SERVER_ROOT_DIR}"/bin/manage-extension

printf "Processing extensions.\n"
for _extension in "${STAGING_DIR}"/extensions/*.zip
do
    printf "  - %s" "${_extension}"
    printf "Installing extension [%s] ... " "${_extension}"
    ${_manageExtension} --install "${_extension}" --no-prompt
    _rc=${?}
    print_status ${_rc}
    if test ${_rc} -ne 0
    then
        printf "Updating extension [%s] ... " "${_extension}"
        ${_manageExtension} --update "${_extension}" --no-prompt
        _rc=${?}
        print_status ${_rc}
        test ${_rc} -ne 0 && exit 20
    fi
    # _extensionDir=$( unzip -l "${_extension}" | awk 'BEGIN{t=""}$1~/----/{t="true"}$1~/0/&&t~/true/ && $4~/\/$/ {t=""; sub(/\/$/,"",$4); print $4; exit;}' )
done
printf "All extensions processed."
exit 0